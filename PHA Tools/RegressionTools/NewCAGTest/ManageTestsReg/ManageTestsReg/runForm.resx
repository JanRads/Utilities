<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cbxPull.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAtAEADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD91vjD8ZfCv7P3w31bxh428QaX4X8MaHCbi/1LUbhYbe2Qdyx6
        knACjJYkAAk4ryPTf+CqP7P+p/CDxB48HxM0e18KeFVtZNWvb63ubNrKO6x9llaGaNZTFNkGOQIUk52s
        cGu0/bW0i71v9j74pQab4fk8Vat/wiWqtp2kRRebNqN0LOXyYY1/56PJtVcc5YYr877P/gnL40/Zf+Cf
        wb8ffETUPFXxg1DSG8H6L4r0ix8LQyP4d8MaTBLcRWKWNpGz3zQ6jKJJZyGkdIYgEURuZAD7ou/+Cm3w
        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
</value>
  </data>
</root>